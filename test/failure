#!/bin/bash
# Copyright Ⓒ 2020 "Sberbank Real Estate Center" Limited Liability Company.
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

# $@ список кластеров, которые надо протестировать, если пустой, то все
# Group0 (witness) не тестируется
# safe bash
set -o errexit -o noclobber -o nounset -o pipefail -o xtrace

readonly root_dir="$(dirname "${BASH_SOURCE[0]}")/.."
. "${root_dir}/load_config.bash"

. "${lib_dir}/power_on.bash"
. "${lib_dir}/cleanup.bash"
. "${lib_dir}/rollback.bash"
. "${lib_dir}/count_words.bash"
. "${lib_dir}/tmux.bash"
. "${lib_dir}/clusters2hosts.bash"

readonly clusters="${*:-${!cluster_dbs[*]}}"
declare -a pane_test
declare -i n=$(count_words $clusters)

trap cleanup EXIT
tmux_init
for c in $clusters
do
	pane_test[$c]="$(tmux display-message -p '#{pane_id}')"
	if [ $n -gt 1 ]
	then
		tmux split-window -h -p $((100-100/n)) ''
		let n-=1
	fi
done; unset c
for c in $clusters
do
	tmux respawn-pane -t "${pane_test[$c]}" -k "'${test_dir}/failure1' ${c}"
done; unset c

rollback 'setup' ${cluster_vms[${Group0}]}
power_on ${cluster_vms[${Group0}]}
tmux_attach
exit 0
# cleanup by trap
