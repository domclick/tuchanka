# $@ опциональный комментарий к tick
# Идея этой функции сделать своеобразный progress meter для тестов выполняемых в цикле
# Пишет в номер текущей итерации и время, так же, опционально, можно добавить комментарий
# в качестве аргумента к функции tick.
# Пишет в fd 3, если он не определен, то пишет в fd 1.
# Пример вызова тестового скрипта, использующего эту функцию, для записи тиков в файл:
# test/shut_down 3>test.log
# Номер тика хранится в глобальной переменной tick_counter.

. "${lib_dir}/is_function_absent.bash"

if is_function_absent 'tick'
then
	# Проверяю, открыт ли 3, если нет, перенаправляю его на 1
	if ! { >&3; } 2>/dev/null
	then
		exec 3>&1
	fi
	# Инициализирую счетчик
	declare -i tick_counter=0
	# функция для вывода тика, в качестве опционального аргумента может быть сообщение (комментарий)
	# $@ комментарии
	function tick { echo -ne "\n${tick_counter} $(date '+%T')" "$@" >&3;}
	readonly -f tick
	# функция для инкремента счетчика и вывода тика, в качестве опционального аргумента может быть сообщение (комментарий)
	# $@ комментарии
	function tick+ {
		let tick_counter=$tick_counter+1
		tick "$@"
	}
	readonly -f tick+
fi
