#!/bin/bash
# Создает и настраивает виртуалки после их создания
# Используется как один из параллельных сопроцессов в setup/create
# safe bash
set -o errexit -o noclobber -o nounset -o pipefail -o xtrace -o errtrace
# $1 ID виртуалки, с которой работать
h="$1"
# get config
readonly root_dir="$(dirname "${BASH_SOURCE[0]}")/.."
. "${root_dir}/load_config.bash"

. "${lib_dir}/vm_ssh.bash"
. "${lib_dir}/snapshot.bash"
. "${lib_dir}/is_snapshot.bash"
. "${lib_dir}/tmux.bash"
if $autoVirtualBox
then
	. "${lib_dir}/vboxvm_dir.bash"
fi

if $autoVirtualBox
then
	# Виртуалки
	echo "Create ${vm_name[$h]}"
	VBoxManage createvm --name "${vm_name[$h]}" --groups "/Tuchanka/Tuchanka${vm_group[$h]}" --ostype RedHat_64 --register
	# get host dir
	vboxvm_vdi="$(vboxvm_dir $h)/${vm_name[$h]}.vdi"
	if [ $h -eq $Witness ]
	then
		# vboxnet_if экспортирована в родительском скрипте
		# На witness две виртуалки, одна для выхода в интернет для ntp и http proxy
		VBoxManage modifyvm "${vm_name[$h]}" --description "${vm_desc[$h]}" --memory $RAM_MiB --vram=$VRAM_MiB --boot1 dvd --boot2 disk --boot3 none --boot4 none --rtcuseutc on --graphicscontroller vboxsvga --firmware bios --defaultfrontend headless --nic1 hostonly --nictype1 virtio --hostonlyadapter1 "${vboxnet_if}" --nic2 nat --nictype2 virtio --mouse ps2 --keyboard ps2 --audio none --cpus $CPUs --cpuexecutioncap $CPU_execution_cap --iconfile "${root_dir}/images/krogan.png"
	else
		VBoxManage modifyvm "${vm_name[$h]}" --description "${vm_desc[$h]}" --memory $RAM_MiB --vram=$VRAM_MiB --boot1 dvd --boot2 disk --boot3 none --boot4 none --rtcuseutc on --graphicscontroller vboxsvga --firmware bios --defaultfrontend headless --nic1 hostonly --nictype1 virtio --hostonlyadapter1 "${vboxnet_if}" --mouse ps2 --keyboard ps2 --audio none --cpus $CPUs --cpuexecutioncap $CPU_execution_cap --iconfile "${root_dir}/images/krogan.png"
	fi
	VBoxManage createmedium disk --filename "${vboxvm_vdi}" --size $HDD_MiB
	VBoxManage storagectl "${vm_name[$h]}" --name 'DiskController' --add sas --hostiocache off --bootable on
	# кэширование образа dvd для ускорения установки
	VBoxManage storagectl "${vm_name[$h]}" --name 'DVDController' --add sata --hostiocache on --bootable on
	VBoxManage storageattach "${vm_name[$h]}" --storagectl 'DiskController' --type hdd --port 0 --device 0 --medium "${vboxvm_vdi}"
	VBoxManage storageattach "${vm_name[$h]}" --storagectl 'DVDController' --type dvddrive --port 0 --device 0 --medium "${dvd_iso}"
	VBoxManage unattended install "${vm_name[$h]}" --iso="${dvd_iso}" --full-user-name="${vm_ip[$h]}" --locale='ru_RU' --time-zone="${time_zone}" --hostname="${vm_name[$h]}.${vm_domain}" --package-selection-adjustment='minimal' --script-template="${setup_dir}/redhat.kickstart" --post-install-command="mkdir -m 700 \"\${MY_TARGET}/root/.ssh\" && echo '$(cat "${ssh_public_key}")' >>\"\${MY_TARGET}/root/.ssh/authorized_keys\"" --start-vm='headless' --extra-install-kernel-parameters='net.ifnames=0 biosdevname=0 ks=cdrom:/ks.cfg'
	echo "Created ${vm_name[$h]}"
else
	echo 'При автоматической установке:'
	echo 'Создаются виртуалки, на них устанавливается CentOS с предварительной настройкой в инсталляторе.'
	echo 'И публичный ключ сисадмина записывается пользователю root.'
	echo 'А сейчас ручной режим и поэтому все эти действия необходимо выполнить вручную.'
	echo 'Дальнейшее выполнение скрипта ожидает, что на серверах кластера уже запущен ssh.'
	read -p 'when ready press Enter'
fi

# Жду завершение установки, записываю публичный ключ хоста
echo "Waiting for ssh on ${vm_name[$h]}"
# ssh-keyscan иногда возвращает при ошибках код отличный от 0, иногда нет.
while true
do
	ssh_key="$(ssh-keyscan -t ssh-ed25519 "${vm_ip[$h]}" 2>/dev/null || true)"
	[ -n "${ssh_key}" ] && break
	sleep 5
done;
# Чтобы не было конкурентной записи в файл ставлю блокировку в tmux
tmux wait-for -L tuchanka_create_vm_lock_ssh_known_hosts
echo "${ssh_key}" >>"${ssh_known_hosts}"
tmux wait-for -U tuchanka_create_vm_lock_ssh_known_hosts
unset ssh_key

# rename hostname, remove fake domain
vm_ssh $h "echo '${vm_name[$h]}' >|/etc/hostname"
# add etc_hosts to /etc/hosts
vm_ssh $h 'cat >>/etc/hosts' <"${etc_hosts}"
# kdump отключен в kickstart файле, выключаю сервис, чтобы systemctl is-system-runnig корректно работал
# при следующей загрузке
vm_ssh $h 'systemctl disable --now kdump.service --quiet'
# Русская локаля с английским текстом
vm_ssh $h 'localectl set-locale LANG=ru_RU.UTF-8 LC_MESSAGES=en_US.UTF-8 LANGUAGE=en'

if $autoVirtualBox
then
	# Наличине скриншота create будет маркером, что распараллелеиное создание виртуалок отработало нормально
	snapshot 'create' 'The snapshot was taken at the end of the "create" script.' $h
else
	echo 'При автоматической установке создается снепшот "create"'
fi

tmux set-option -p -t "${TMUX_PANE}" remain-on-exit off
exit 0
