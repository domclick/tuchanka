#!/bin/bash
# Устанавливает пакеты в указанную виртуалку
# Используется как один из параллельных сопроцессов в setup/install
# safe bash
set -o errexit -o noclobber -o nounset -o pipefail -o xtrace -o errtrace
# $1 ID виртуалки, с которой работать
h="$1"
# get config
readonly root_dir="$(dirname "${BASH_SOURCE[0]}")/.."
. "${root_dir}/load_config.bash"

. "${lib_dir}/vm_ssh.bash"
. "${lib_dir}/tmux.bash"
if $autoVirtualBox
then
	. "${lib_dir}/power_on.bash"
	. "${lib_dir}/snapshot.bash"
	. "${lib_dir}/is_snapshot.bash"
fi

if $autoVirtualBox
then
	power_on $h
fi

echo "Install soft to ${vm_name[$h]}"
if [ $h -eq $Witness ]
then
	# setup proxy
	vm_ssh $h 'yum --assumeyes install squid'
	vm_ssh $h 'mv /etc/squid/squid.conf /etc/squid/squid.conf.origin'
	vm_cp $h "${upload_dir}/${vm_name[$h]}/squid.conf" '/etc/squid/squid.conf'
	vm_ssh $h 'systemctl enable --now squid.service --quiet'
else
	# Network manager, бывает, глючит, на обычных vm (не witness) он не нужен
	vm_ssh $h 'systemctl disable --now NetworkManager.service --quiet'
	vm_ssh $h 'systemctl disable --now NetworkManager-wait-online.service --quiet'
fi
# отключаю fastestmirror.conf, чтобы не мешал proxy
vm_ssh $h "sed -e '/^enabled=1\$/ s//enabled=0/' -i /etc/yum/pluginconf.d/fastestmirror.conf"
vm_ssh $h "sed -e '/^# PUT YOUR REPOS HERE/ i proxy=${proxy_url}\n' -i /etc/yum.conf"
echo 'wait proxy'
# Когда proxy заработает, то curl на такой запрос вернет 22, так как доступ к localhost через прокси запрещен в конфиге squid
# запрос идет через виртуалку, так как в хосте может быть не определено в /etc/hosts имя указанное в ${proxy_url}
until vm_ssh $h "curl --proxy '${proxy_url}' --connect-timeout 1 --fail --head --output /dev/null --silent http://localhost || [ \$? -eq 22 ]"
do
	sleep 5
done
# для htop нужен epel
vm_ssh $h "yum --assumeyes install epel-release http://download.postgresql.org/pub/repos/yum/${postgresql_version}/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
# переделываю на baseurl, чтобы нормально работало proxy
# раскомментирую baseurl, https->http, комментирую mirrorlist и metalink
vm_ssh $h "sed -e '/^#\\?baseurl=https\\?:/ s//baseurl=http:/' -e '/^\\(mirrorlist\\)\\|\\(metalink\\)=/ s//#&/' -i /etc/yum.repos.d/*.repo"
vm_ssh $h 'yum --assumeyes erase chrony'
vm_ssh $h 'yum --assumeyes install deltarpm'
vm_ssh $h 'yum --assumeyes update'
# awscli для тестирования s3 на witness
vm_ssh $h "yum --assumeyes install mc vim nmap mlocate htop pcs gpm ntp screen tmux bind-utils iotop sysbench stress-ng wget zabbix40-agent postgresql${postgresql_version} postgresql${postgresql_version}-server postgresql${postgresql_version}-contrib pgcenter awscli"
if [ $h -eq $Witness ]
then
	vm_ssh $h 'yum --assumeyes install corosync-qnetd'
else
	vm_ssh $h 'yum --assumeyes install resource-agents-paf corosync-qdevice sbd'
fi

if $autoVirtualBox
then
	if [ $h -eq $Witness ]
	then
		# Жду, пока все остальные, кроме witness, завершат инсталяцию,
		# потому как http proxy на witness нужен для завершения инсталяции на остальных виртуалках.
		# Проверяю, что инсталяция была успешно завершена по наличию снепшота install
		for hh in ${!vm_name[@]}
		do
			if [ $hh -eq $Witness ]
			then
				continue
			fi
			while true
			do
				is=$(is_snapshot 'install' $hh)
				$is && break
				sleep 5
			done
		done;unset hh is
	fi
	# Наличине скриншота install будет маркером, что распараллелеиная установка пакетов отработала нормально
	snapshot 'install' 'The snapshot was taken at the end of the "install" script.' $h
else
	echo 'При автоматической установке создается снепшот "install"'
fi

tmux set-option -p -t "${TMUX_PANE}" remain-on-exit off
exit 0
